//
// Grid Options
//
// To avoid your options getting overridden by an update,
// copy and paste the below options to your own sass file
// and include it before this file.

// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
  xs: 0,
  sm: 640px,
  md: 1150px,
  lg: 1440px,
  xl: 1660px,
) !default;

// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
  // sm: 690px,
  // md: 1020px,
  md: 1144px
) !default;

// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns: 12 !default;
$grid-gutter-width: 16px !default;

// END of Grid Options

// Bootstrap file imports
@import "breakpoints/mixins/breakpoints";
@import "grid/bootstrap-grid";
@import "sizing/utilities/sizing";
@import "layout/utilities/spacing";
@import "layout/mixins/visibility";
@import "layout/utilities/visibility";

@media (min-width: map-get($grid-breakpoints, sm)) and (max-width: map-get($grid-breakpoints, md)) {
  .container {
    padding-left: 39px;
    padding-right: 39px;
  }
}
@media (min-width: map-get($grid-breakpoints, xs)) and (max-width: map-get($grid-breakpoints, sm)) {
  .row > .col,
  .row > [class*="col-"] {
    padding-right: 16px;
    padding-left: 16px;
  }
}

// Grid functions

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@function breakpoint($key) {
  $bp: strip-unit(map-get($grid-breakpoints, $key));
  @return #{$bp - 1}px;
}
